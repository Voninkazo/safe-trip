---
import AdminPanel from "../../components/AdminSideBar";
import AdminLayout from "../../layout/AdminLayout.astro";
import type { User } from "../../utils/type";

const user: User | null = Astro.locals.user;
---

<AdminLayout title="Setting">
  <AdminPanel client:only="react" user={user || undefined} />
  <div class="ml-20 basis-[80%]">
    <h2 class="text-xl font-meduim text-blue-800 mt-8">Settings</h2>
    <div
      id="toast-success"
      class="hidden flex items-center w-full max-w-xs mx-auto mt-8 p-4 mb-4 text-gray-500 bg-green-100 rounded-lg shadow"
      role="alert"
    >
      <div
        class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 rounded-lg bg-green-800 text-green-200"
      >
        <svg
          class="w-5 h-5"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="currentColor"
          viewBox="0 0 20 20"
        >
          <path
            d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z"
          ></path>
        </svg>
        <span class="sr-only">Check icon</span>
      </div>
      <div class="ms-3 text-sm font-normal text-black" id="resMessage">
        User updated successfully.
      </div>
      <button
        type="button"
        class="ms-auto -mx-1.5 -my-1.5 rounded-lg p-1.5 inline-flex items-center justify-center h-8 w-8 bg-gray-600 hover:bg-gray-900 text-white"
        data-dismiss-target="#toast-success"
        aria-label="Close"
        id="close"
      >
        <span class="sr-only">Close</span>
        <svg
          class="w-3 h-3"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 14 14"
        >
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
        </svg>
      </button>
    </div>
    <div
      id="toast-danger"
      class="hidden flex items-center w-full max-w-xs mx-auto p-4 mb-4 rounded-lg shadow text-gray-400 bg-red-100"
      role="alert"
    >
      <div
        class="inline-flex items-center justify-center flex-shrink-0 w-8 h-8 rounded-lg bg-red-800 text-red-200"
      >
        <svg
          class="w-5 h-5"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="currentColor"
          viewBox="0 0 20 20"
        >
          <path
            d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 11.793a1 1 0 1 1-1.414 1.414L10 11.414l-2.293 2.293a1 1 0 0 1-1.414-1.414L8.586 10 6.293 7.707a1 1 0 0 1 1.414-1.414L10 8.586l2.293-2.293a1 1 0 0 1 1.414 1.414L11.414 10l2.293 2.293Z"
          ></path>
        </svg>
        <span class="sr-only">Error icon</span>
      </div>
      <div class="ms-3 text-sm font-normal text-black" id="errMessage"></div>
      <button
        type="button"
        class="ms-auto -mx-1.5 -my-1.5 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 inline-flex items-center justify-center h-8 w-8 text-white bg-gray-700 hover:bg-gray-800"
        data-dismiss-target="#toast-danger"
        aria-label="Close"
        id="close"
      >
        <span class="sr-only">Close</span>
        <svg
          class="w-3 h-3"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 14 14"
        >
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
        </svg>
      </button>
    </div>
    <form method="post" action="/api/user/update" class="w-[1000px] mt-16">
      <fieldset class="w-full grid grid-cols-[200px_1fr] items-center my-8">
        <label for="email" class="font-bold">Email:</label>
        <input
          type="text"
          placeholder="email"
          name="email"
          id="email"
          value={user?.email}
          class="h-14 pl-4 outline-0 border-b border-blue-900"
          required
        />
      </fieldset>
      <fieldset class="grid grid-cols-[200px_1fr] items-center my-8">
        <label for="username" class="font-bold">Username:</label>
        <input
          type="text"
          placeholder="username"
          name="username"
          id="username"
          value={user?.username}
          class="h-14 pl-4 outline-0 border-b border-blue-900"
          required
        />
      </fieldset>
      <fieldset class="grid grid-cols-[200px_1fr] items-center my-8">
        <label for="cooperativeName" class="font-bold">Cooperative Name:</label>
        <input
          type="text"
          name="cooperativeName"
          placeholder="Cooperative Name"
          id="cooperativeName"
          value={user?.cooperativeName}
          class="h-14 pl-4 outline-0 border-b border-blue-900"
          required
        />
      </fieldset>
      <fieldset class="grid grid-cols-[200px_1fr] items-center my-8">
        <label for="cooperativePhoneNumber" class="font-bold"
          >Cooperative Contact:</label
        >
        <input
          type="text"
          name="cooperativePhoneNumber"
          placeholder="Cooperative Contact"
          id="cooperativePhoneNumber"
          value={user?.cooperativePhoneNumber}
          class="h-14 pl-4 outline-0 border-b border-blue-900"
          required
        />
      </fieldset>
      <div class="w-full flex justify-end">
        <button class="bg-blue-900 text-white font-bold h-14 px-11 rounded-md">
          Save
        </button>
      </div>
    </form>
  </div>
</AdminLayout>
<script>
  const toastDanger = document.getElementById("toast-danger")!;
  const toastSuccess = document.getElementById("toast-success")!;
  const errorMessageElement = document.getElementById("errMessage")!;
  const closeEl = document.getElementById("close")!;
  document.forms[0].addEventListener("submit", async (e) => {
    e.preventDefault();
    errorMessageElement.innerText = "";
    const formElement = e.target as HTMLFormElement;
    const response = await fetch(formElement.action, {
      method: formElement.method,
      body: new FormData(formElement),
    });
    if (response.ok) {
      toastSuccess.classList.remove("hidden");
    } else {
      toastDanger.classList.remove("hidden");
      errorMessageElement.innerText = (await response.json()).error;
    }
  });

  closeEl.addEventListener("click", () => {
    toastDanger.classList.add("hidden");
    toastSuccess.classList.add("hidden");
  });
</script>
